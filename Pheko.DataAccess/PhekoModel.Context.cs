//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pheko.DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class PhekoEntities : DbContext
    {
        public PhekoEntities()
            : base("name=PhekoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<ChronicDesease> ChronicDeseases { get; set; }
        public DbSet<ClinicalExamination> ClinicalExaminations { get; set; }
        public DbSet<Country> Countries { get; set; }
        public DbSet<DeseaseScreening> DeseaseScreenings { get; set; }
        public DbSet<Doctor> Doctors { get; set; }
        public DbSet<Field> Fields { get; set; }
        public DbSet<FieldValue> FieldValues { get; set; }
        public DbSet<MedicalMonitoring> MedicalMonitorings { get; set; }
        public DbSet<MedicalNote> MedicalNotes { get; set; }
        public DbSet<PastMedicalHistory> PastMedicalHistories { get; set; }
        public DbSet<Patient> Patients { get; set; }
        public DbSet<PatientAddress> PatientAddresses { get; set; }
        public DbSet<PatientChronicDesease> PatientChronicDeseases { get; set; }
        public DbSet<PatientClinicalExamination> PatientClinicalExaminations { get; set; }
        public DbSet<PatientConsultation> PatientConsultations { get; set; }
        public DbSet<PatientConsultationSickNote> PatientConsultationSickNotes { get; set; }
        public DbSet<PatientDeseaseScreening> PatientDeseaseScreenings { get; set; }
        public DbSet<PatientMedicalAidDependancy> PatientMedicalAidDependancies { get; set; }
        public DbSet<PatientMedicalMonitoring> PatientMedicalMonitorings { get; set; }
        public DbSet<PatientMedicalNote> PatientMedicalNotes { get; set; }
        public DbSet<PatientPastMedicalHistory> PatientPastMedicalHistories { get; set; }
        public DbSet<PatientVitalSign> PatientVitalSigns { get; set; }
        public DbSet<Province> Provinces { get; set; }
        public DbSet<SecurityMenuItem> SecurityMenuItems { get; set; }
        public DbSet<SecurityObject> SecurityObjects { get; set; }
        public DbSet<SecurityObjectRight> SecurityObjectRights { get; set; }
        public DbSet<SecurityRole> SecurityRoles { get; set; }
        public DbSet<SecurityUser> SecurityUsers { get; set; }
        public DbSet<SecurityUserConnectionManager> SecurityUserConnectionManagers { get; set; }
        public DbSet<SecurityUserRole> SecurityUserRoles { get; set; }
        public DbSet<VitalSign> VitalSigns { get; set; }
    
        public virtual ObjectResult<pat_PatientChronicDeseaseSchedule_Result> pat_PatientChronicDeseaseSchedule(Nullable<int> patientId, ObjectParameter infoMsg)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pat_PatientChronicDeseaseSchedule_Result>("pat_PatientChronicDeseaseSchedule", patientIdParameter, infoMsg);
        }
    
        public virtual ObjectResult<pat_PatientClinicalExaminationSchedule_Result> pat_PatientClinicalExaminationSchedule(Nullable<int> patientConsultationId, ObjectParameter infoMsg)
        {
            var patientConsultationIdParameter = patientConsultationId.HasValue ?
                new ObjectParameter("PatientConsultationId", patientConsultationId) :
                new ObjectParameter("PatientConsultationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pat_PatientClinicalExaminationSchedule_Result>("pat_PatientClinicalExaminationSchedule", patientConsultationIdParameter, infoMsg);
        }
    
        public virtual ObjectResult<pat_PatientConsultationSickNoteSchedule_Result> pat_PatientConsultationSickNoteSchedule(Nullable<int> userId, Nullable<int> patientConsultationId, ObjectParameter infoMsg)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var patientConsultationIdParameter = patientConsultationId.HasValue ?
                new ObjectParameter("PatientConsultationId", patientConsultationId) :
                new ObjectParameter("PatientConsultationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pat_PatientConsultationSickNoteSchedule_Result>("pat_PatientConsultationSickNoteSchedule", userIdParameter, patientConsultationIdParameter, infoMsg);
        }
    
        public virtual ObjectResult<pat_PatientDeseaseScreeningSchedule_Result> pat_PatientDeseaseScreeningSchedule(Nullable<int> patientId, ObjectParameter infoMsg)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pat_PatientDeseaseScreeningSchedule_Result>("pat_PatientDeseaseScreeningSchedule", patientIdParameter, infoMsg);
        }
    
        public virtual ObjectResult<pat_PatientMedicalAidDependanciesSchedule_Result> pat_PatientMedicalAidDependanciesSchedule(Nullable<int> patientId, ObjectParameter infoMsg)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pat_PatientMedicalAidDependanciesSchedule_Result>("pat_PatientMedicalAidDependanciesSchedule", patientIdParameter, infoMsg);
        }
    
        public virtual ObjectResult<pat_PatientMedicalMonitoringSchedule_Result> pat_PatientMedicalMonitoringSchedule(Nullable<int> patientConsultationId, ObjectParameter infoMsg)
        {
            var patientConsultationIdParameter = patientConsultationId.HasValue ?
                new ObjectParameter("PatientConsultationId", patientConsultationId) :
                new ObjectParameter("PatientConsultationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pat_PatientMedicalMonitoringSchedule_Result>("pat_PatientMedicalMonitoringSchedule", patientConsultationIdParameter, infoMsg);
        }
    
        public virtual ObjectResult<pat_PatientMedicalNoteDetailsSchedule_Result> pat_PatientMedicalNoteDetailsSchedule(Nullable<int> patientConsultationId, Nullable<int> patientId, ObjectParameter infoMsg)
        {
            var patientConsultationIdParameter = patientConsultationId.HasValue ?
                new ObjectParameter("PatientConsultationId", patientConsultationId) :
                new ObjectParameter("PatientConsultationId", typeof(int));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pat_PatientMedicalNoteDetailsSchedule_Result>("pat_PatientMedicalNoteDetailsSchedule", patientConsultationIdParameter, patientIdParameter, infoMsg);
        }
    
        public virtual ObjectResult<pat_PatientMedicalNoteSchedule_Result> pat_PatientMedicalNoteSchedule(Nullable<int> patientConsultationId, ObjectParameter infoMsg)
        {
            var patientConsultationIdParameter = patientConsultationId.HasValue ?
                new ObjectParameter("PatientConsultationId", patientConsultationId) :
                new ObjectParameter("PatientConsultationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pat_PatientMedicalNoteSchedule_Result>("pat_PatientMedicalNoteSchedule", patientConsultationIdParameter, infoMsg);
        }
    
        public virtual ObjectResult<pat_PatientPastMedicalHistorySchedule_Result> pat_PatientPastMedicalHistorySchedule(Nullable<int> patientId, ObjectParameter infoMsg)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pat_PatientPastMedicalHistorySchedule_Result>("pat_PatientPastMedicalHistorySchedule", patientIdParameter, infoMsg);
        }
    
        public virtual ObjectResult<pat_PatientSchedule_Result> pat_PatientSchedule(Nullable<int> patientId, Nullable<int> userId, ObjectParameter infoMsg)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pat_PatientSchedule_Result>("pat_PatientSchedule", patientIdParameter, userIdParameter, infoMsg);
        }
    
        public virtual int pat_PatientScriptSchedule(Nullable<int> userId, Nullable<int> patientConsultationId, ObjectParameter infoMsg)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var patientConsultationIdParameter = patientConsultationId.HasValue ?
                new ObjectParameter("PatientConsultationId", patientConsultationId) :
                new ObjectParameter("PatientConsultationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pat_PatientScriptSchedule", userIdParameter, patientConsultationIdParameter, infoMsg);
        }
    
        public virtual ObjectResult<pat_PatientSickNoteSchedule_Result> pat_PatientSickNoteSchedule(Nullable<int> patientId, ObjectParameter infoMsg)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pat_PatientSickNoteSchedule_Result>("pat_PatientSickNoteSchedule", patientIdParameter, infoMsg);
        }
    
        public virtual ObjectResult<pat_PatientVitalSignSchedule_Result> pat_PatientVitalSignSchedule(Nullable<int> patientId, ObjectParameter infoMsg)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pat_PatientVitalSignSchedule_Result>("pat_PatientVitalSignSchedule", patientIdParameter, infoMsg);
        }
    
        public virtual int pat_SaveCheck(Nullable<int> patientId, string title, string firstName, string lastName, string gender, string ethnicGroup, Nullable<System.DateTime> birthDate, string iDNumber, string maritalStatus, Nullable<short> principalMemberInd, Nullable<System.Guid> gUID, ObjectParameter infoMsg)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var ethnicGroupParameter = ethnicGroup != null ?
                new ObjectParameter("EthnicGroup", ethnicGroup) :
                new ObjectParameter("EthnicGroup", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var iDNumberParameter = iDNumber != null ?
                new ObjectParameter("IDNumber", iDNumber) :
                new ObjectParameter("IDNumber", typeof(string));
    
            var maritalStatusParameter = maritalStatus != null ?
                new ObjectParameter("MaritalStatus", maritalStatus) :
                new ObjectParameter("MaritalStatus", typeof(string));
    
            var principalMemberIndParameter = principalMemberInd.HasValue ?
                new ObjectParameter("PrincipalMemberInd", principalMemberInd) :
                new ObjectParameter("PrincipalMemberInd", typeof(short));
    
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pat_SaveCheck", patientIdParameter, titleParameter, firstNameParameter, lastNameParameter, genderParameter, ethnicGroupParameter, birthDateParameter, iDNumberParameter, maritalStatusParameter, principalMemberIndParameter, gUIDParameter, infoMsg);
        }
    }
}
