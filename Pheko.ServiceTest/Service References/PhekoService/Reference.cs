//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pheko.ServiceTest.PhekoService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PhekoService.IPhekoService")]
    public interface IPhekoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/Login", ReplyAction="http://tempuri.org/IPhekoService/LoginResponse")]
        Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto> Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/Login", ReplyAction="http://tempuri.org/IPhekoService/LoginResponse")]
        System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto>> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/ResetPassword", ReplyAction="http://tempuri.org/IPhekoService/ResetPasswordResponse")]
        Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto> ResetPassword(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/ResetPassword", ReplyAction="http://tempuri.org/IPhekoService/ResetPasswordResponse")]
        System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto>> ResetPasswordAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/ChangePassword", ReplyAction="http://tempuri.org/IPhekoService/ChangePasswordResponse")]
        Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto> ChangePassword(string username, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/ChangePassword", ReplyAction="http://tempuri.org/IPhekoService/ChangePasswordResponse")]
        System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto>> ChangePasswordAsync(string username, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/SaveUser", ReplyAction="http://tempuri.org/IPhekoService/SaveUserResponse")]
        Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto> SaveUser(Pheko.Common.DataTransformObjects.SecurityUserDto securityUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/SaveUser", ReplyAction="http://tempuri.org/IPhekoService/SaveUserResponse")]
        System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto>> SaveUserAsync(Pheko.Common.DataTransformObjects.SecurityUserDto securityUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/GetPatientDetails", ReplyAction="http://tempuri.org/IPhekoService/GetPatientDetailsResponse")]
        Pheko.ServicePresentation.ServiceResponses.PatientDetailResponse GetPatientDetails(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/GetPatientDetails", ReplyAction="http://tempuri.org/IPhekoService/GetPatientDetailsResponse")]
        System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.PatientDetailResponse> GetPatientDetailsAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/Search", ReplyAction="http://tempuri.org/IPhekoService/SearchResponse")]
        Pheko.ServicePresentation.ServiceResponses.Result<Pheko.Common.DataTransformObjects.PatientDto> Search(Pheko.Common.DataTransformObjects.PatientDto searchPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/Search", ReplyAction="http://tempuri.org/IPhekoService/SearchResponse")]
        System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Result<Pheko.Common.DataTransformObjects.PatientDto>> SearchAsync(Pheko.Common.DataTransformObjects.PatientDto searchPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/SavePatient", ReplyAction="http://tempuri.org/IPhekoService/SavePatientResponse")]
        Pheko.ServicePresentation.ServiceResponses.PatientDetailResponse SavePatient(Pheko.Common.DataTransformObjects.PatientDto patientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/SavePatient", ReplyAction="http://tempuri.org/IPhekoService/SavePatientResponse")]
        System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.PatientDetailResponse> SavePatientAsync(Pheko.Common.DataTransformObjects.PatientDto patientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/SavePatientMedicalAidDependancy", ReplyAction="http://tempuri.org/IPhekoService/SavePatientMedicalAidDependancyResponse")]
        Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.PatientMedicalAidDependancyDto> SavePatientMedicalAidDependancy(Pheko.Common.DataTransformObjects.PatientMedicalAidDependancyDto patientMedicalAidDependancyDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/SavePatientMedicalAidDependancy", ReplyAction="http://tempuri.org/IPhekoService/SavePatientMedicalAidDependancyResponse")]
        System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.PatientMedicalAidDependancyDto>> SavePatientMedicalAidDependancyAsync(Pheko.Common.DataTransformObjects.PatientMedicalAidDependancyDto patientMedicalAidDependancyDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/SavePatientConsultation", ReplyAction="http://tempuri.org/IPhekoService/SavePatientConsultationResponse")]
        Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.PatientConsultationDto> SavePatientConsultation(Pheko.Common.DataTransformObjects.PatientConsultationDto patientConsultationDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/SavePatientConsultation", ReplyAction="http://tempuri.org/IPhekoService/SavePatientConsultationResponse")]
        System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.PatientConsultationDto>> SavePatientConsultationAsync(Pheko.Common.DataTransformObjects.PatientConsultationDto patientConsultationDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/GetPatientConsultations", ReplyAction="http://tempuri.org/IPhekoService/GetPatientConsultationsResponse")]
        Pheko.ServicePresentation.ServiceResponses.Result<Pheko.Common.DataTransformObjects.PatientConsultationDto> GetPatientConsultations(int patientId, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/GetPatientConsultations", ReplyAction="http://tempuri.org/IPhekoService/GetPatientConsultationsResponse")]
        System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Result<Pheko.Common.DataTransformObjects.PatientConsultationDto>> GetPatientConsultationsAsync(int patientId, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/GetCountries", ReplyAction="http://tempuri.org/IPhekoService/GetCountriesResponse")]
        Pheko.Common.DataTransformObjects.CountryDto[] GetCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/GetCountries", ReplyAction="http://tempuri.org/IPhekoService/GetCountriesResponse")]
        System.Threading.Tasks.Task<Pheko.Common.DataTransformObjects.CountryDto[]> GetCountriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/GetCountryProvinces", ReplyAction="http://tempuri.org/IPhekoService/GetCountryProvincesResponse")]
        Pheko.Common.DataTransformObjects.ProvinceDto[] GetCountryProvinces(System.Nullable<int> countryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/GetCountryProvinces", ReplyAction="http://tempuri.org/IPhekoService/GetCountryProvincesResponse")]
        System.Threading.Tasks.Task<Pheko.Common.DataTransformObjects.ProvinceDto[]> GetCountryProvincesAsync(System.Nullable<int> countryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/GetFieldValues", ReplyAction="http://tempuri.org/IPhekoService/GetFieldValuesResponse")]
        Pheko.Common.DataTransformObjects.FieldValueDto[] GetFieldValues(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhekoService/GetFieldValues", ReplyAction="http://tempuri.org/IPhekoService/GetFieldValuesResponse")]
        System.Threading.Tasks.Task<Pheko.Common.DataTransformObjects.FieldValueDto[]> GetFieldValuesAsync(string tableName, string fieldName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPhekoServiceChannel : Pheko.ServiceTest.PhekoService.IPhekoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhekoServiceClient : System.ServiceModel.ClientBase<Pheko.ServiceTest.PhekoService.IPhekoService>, Pheko.ServiceTest.PhekoService.IPhekoService {
        
        public PhekoServiceClient() {
        }
        
        public PhekoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PhekoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhekoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhekoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto> Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto>> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto> ResetPassword(string username) {
            return base.Channel.ResetPassword(username);
        }
        
        public System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto>> ResetPasswordAsync(string username) {
            return base.Channel.ResetPasswordAsync(username);
        }
        
        public Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto> ChangePassword(string username, string oldPassword, string newPassword) {
            return base.Channel.ChangePassword(username, oldPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto>> ChangePasswordAsync(string username, string oldPassword, string newPassword) {
            return base.Channel.ChangePasswordAsync(username, oldPassword, newPassword);
        }
        
        public Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto> SaveUser(Pheko.Common.DataTransformObjects.SecurityUserDto securityUser) {
            return base.Channel.SaveUser(securityUser);
        }
        
        public System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.SecurityUserDto>> SaveUserAsync(Pheko.Common.DataTransformObjects.SecurityUserDto securityUser) {
            return base.Channel.SaveUserAsync(securityUser);
        }
        
        public Pheko.ServicePresentation.ServiceResponses.PatientDetailResponse GetPatientDetails(int patientId) {
            return base.Channel.GetPatientDetails(patientId);
        }
        
        public System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.PatientDetailResponse> GetPatientDetailsAsync(int patientId) {
            return base.Channel.GetPatientDetailsAsync(patientId);
        }
        
        public Pheko.ServicePresentation.ServiceResponses.Result<Pheko.Common.DataTransformObjects.PatientDto> Search(Pheko.Common.DataTransformObjects.PatientDto searchPatient) {
            return base.Channel.Search(searchPatient);
        }
        
        public System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Result<Pheko.Common.DataTransformObjects.PatientDto>> SearchAsync(Pheko.Common.DataTransformObjects.PatientDto searchPatient) {
            return base.Channel.SearchAsync(searchPatient);
        }
        
        public Pheko.ServicePresentation.ServiceResponses.PatientDetailResponse SavePatient(Pheko.Common.DataTransformObjects.PatientDto patientDto) {
            return base.Channel.SavePatient(patientDto);
        }
        
        public System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.PatientDetailResponse> SavePatientAsync(Pheko.Common.DataTransformObjects.PatientDto patientDto) {
            return base.Channel.SavePatientAsync(patientDto);
        }
        
        public Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.PatientMedicalAidDependancyDto> SavePatientMedicalAidDependancy(Pheko.Common.DataTransformObjects.PatientMedicalAidDependancyDto patientMedicalAidDependancyDto) {
            return base.Channel.SavePatientMedicalAidDependancy(patientMedicalAidDependancyDto);
        }
        
        public System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.PatientMedicalAidDependancyDto>> SavePatientMedicalAidDependancyAsync(Pheko.Common.DataTransformObjects.PatientMedicalAidDependancyDto patientMedicalAidDependancyDto) {
            return base.Channel.SavePatientMedicalAidDependancyAsync(patientMedicalAidDependancyDto);
        }
        
        public Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.PatientConsultationDto> SavePatientConsultation(Pheko.Common.DataTransformObjects.PatientConsultationDto patientConsultationDto) {
            return base.Channel.SavePatientConsultation(patientConsultationDto);
        }
        
        public System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Response<Pheko.Common.DataTransformObjects.PatientConsultationDto>> SavePatientConsultationAsync(Pheko.Common.DataTransformObjects.PatientConsultationDto patientConsultationDto) {
            return base.Channel.SavePatientConsultationAsync(patientConsultationDto);
        }
        
        public Pheko.ServicePresentation.ServiceResponses.Result<Pheko.Common.DataTransformObjects.PatientConsultationDto> GetPatientConsultations(int patientId, string searchText) {
            return base.Channel.GetPatientConsultations(patientId, searchText);
        }
        
        public System.Threading.Tasks.Task<Pheko.ServicePresentation.ServiceResponses.Result<Pheko.Common.DataTransformObjects.PatientConsultationDto>> GetPatientConsultationsAsync(int patientId, string searchText) {
            return base.Channel.GetPatientConsultationsAsync(patientId, searchText);
        }
        
        public Pheko.Common.DataTransformObjects.CountryDto[] GetCountries() {
            return base.Channel.GetCountries();
        }
        
        public System.Threading.Tasks.Task<Pheko.Common.DataTransformObjects.CountryDto[]> GetCountriesAsync() {
            return base.Channel.GetCountriesAsync();
        }
        
        public Pheko.Common.DataTransformObjects.ProvinceDto[] GetCountryProvinces(System.Nullable<int> countryId) {
            return base.Channel.GetCountryProvinces(countryId);
        }
        
        public System.Threading.Tasks.Task<Pheko.Common.DataTransformObjects.ProvinceDto[]> GetCountryProvincesAsync(System.Nullable<int> countryId) {
            return base.Channel.GetCountryProvincesAsync(countryId);
        }
        
        public Pheko.Common.DataTransformObjects.FieldValueDto[] GetFieldValues(string tableName, string fieldName) {
            return base.Channel.GetFieldValues(tableName, fieldName);
        }
        
        public System.Threading.Tasks.Task<Pheko.Common.DataTransformObjects.FieldValueDto[]> GetFieldValuesAsync(string tableName, string fieldName) {
            return base.Channel.GetFieldValuesAsync(tableName, fieldName);
        }
    }
}
